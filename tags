!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACK	util.h	59;"	d
C_AWAIT	util.h	/^typedef enum {C_REQUEST, C_AWAIT, C_PAIR, C_PASSIVE} state_c;$/;"	e	enum:__anon6
C_GC_COMM	util.h	67;"	d
C_PAIR	util.h	/^typedef enum {C_REQUEST, C_AWAIT, C_PAIR, C_PASSIVE} state_c;$/;"	e	enum:__anon6
C_PAIR_G	util.h	/^    int C_PAIR_G;$/;"	m	struct:__anon9
C_PASSIVE	util.h	/^typedef enum {C_REQUEST, C_AWAIT, C_PAIR, C_PASSIVE} state_c;$/;"	e	enum:__anon6
C_REQUEST	util.h	/^typedef enum {C_REQUEST, C_AWAIT, C_PAIR, C_PASSIVE} state_c;$/;"	e	enum:__anon6
C_VENUE_CLAIM	util.h	69;"	d
C_VENUE_COMM	util.h	68;"	d
C_VENUE_RELEASE	util.h	70;"	d
D_AWAIT	util.h	/^typedef enum {D_REQUEST, D_AWAIT, D_PAIR, D_PASSIVE} state_d;$/;"	e	enum:__anon5
D_GD_COMM	util.h	65;"	d
D_PAIR	util.h	/^typedef enum {D_REQUEST, D_AWAIT, D_PAIR, D_PASSIVE} state_d;$/;"	e	enum:__anon5
D_PAIR_G	util.h	/^    int D_PAIR_G;$/;"	m	struct:__anon8
D_PASSIVE	util.h	/^typedef enum {D_REQUEST, D_AWAIT, D_PAIR, D_PASSIVE} state_d;$/;"	e	enum:__anon5
D_REQUEST	util.h	/^typedef enum {D_REQUEST, D_AWAIT, D_PAIR, D_PASSIVE} state_d;$/;"	e	enum:__anon5
EMPTY	util.h	58;"	d
FALSE	main.h	15;"	d
FLAGS	Makefile	/^FLAGS=-DDEBUG -g$/;"	m
G1_AWAIT	util.h	/^typedef enum {G1_REQUEST, G1_AWAIT, G1_PAIR, G_VENUE_SEARCH, G_VENUE_AWAIT,$/;"	e	enum:__anon4
G1_PAIR	util.h	/^typedef enum {G1_REQUEST, G1_AWAIT, G1_PAIR, G_VENUE_SEARCH, G_VENUE_AWAIT,$/;"	e	enum:__anon4
G1_REQUEST	util.h	/^typedef enum {G1_REQUEST, G1_AWAIT, G1_PAIR, G_VENUE_SEARCH, G_VENUE_AWAIT,$/;"	e	enum:__anon4
G2_AWAIT	util.h	/^              G_VENUE_REGISTER, G_VENUE_CLAIM, G2_REQUEST, G2_AWAIT, G2_PAIR,$/;"	e	enum:__anon4
G2_PAIR	util.h	/^              G_VENUE_REGISTER, G_VENUE_CLAIM, G2_REQUEST, G2_AWAIT, G2_PAIR,$/;"	e	enum:__anon4
G2_REQUEST	util.h	/^              G_VENUE_REGISTER, G_VENUE_CLAIM, G2_REQUEST, G2_AWAIT, G2_PAIR,$/;"	e	enum:__anon4
GC_PAIR	util.h	72;"	d
GD_PAIR	util.h	71;"	d
G_GC_COMM	util.h	66;"	d
G_GD_COMM	util.h	64;"	d
G_INFORM_TIMESTAMP	util.h	74;"	d
G_PAIR_C	util.h	/^    int G_PAIR_C;$/;"	m	struct:__anon7
G_PAIR_D	util.h	/^    int G_PAIR_D;$/;"	m	struct:__anon7
G_PERG	util.h	/^              G_PERG} state_g;$/;"	e	enum:__anon4
G_VENUE_AWAIT	util.h	/^typedef enum {G1_REQUEST, G1_AWAIT, G1_PAIR, G_VENUE_SEARCH, G_VENUE_AWAIT,$/;"	e	enum:__anon4
G_VENUE_CLAIM	util.h	/^              G_VENUE_REGISTER, G_VENUE_CLAIM, G2_REQUEST, G2_AWAIT, G2_PAIR,$/;"	e	enum:__anon4
G_VENUE_REGISTER	util.h	/^              G_VENUE_REGISTER, G_VENUE_CLAIM, G2_REQUEST, G2_AWAIT, G2_PAIR,$/;"	e	enum:__anon4
G_VENUE_SEARCH	util.h	/^typedef enum {G1_REQUEST, G1_AWAIT, G1_PAIR, G_VENUE_SEARCH, G_VENUE_AWAIT,$/;"	e	enum:__anon4
HEADERS	Makefile	/^HEADERS=$(SOURCES:.c=.h)$/;"	m
LAMPORTH	lamport.h	2;"	d
MAINH	main.h	2;"	d
MPI_PAKIET_T	util.c	/^MPI_Datatype MPI_PAKIET_T;$/;"	v
MSG_LIST_GC	util.h	/^    packet_t* MSG_LIST_GC;$/;"	m	struct:__anon7
MSG_LIST_GC	util.h	/^    packet_t* MSG_LIST_GC;$/;"	m	struct:__anon9
MSG_LIST_GD	util.h	/^    packet_t* MSG_LIST_GD;$/;"	m	struct:__anon7
MSG_LIST_GD	util.h	/^    packet_t* MSG_LIST_GD;$/;"	m	struct:__anon8
MSG_LIST_VENUE	util.h	/^    short int* MSG_LIST_VENUE;$/;"	m	struct:__anon7
NITEMS	util.h	13;"	d
PERF_READY	util.h	73;"	d
RELEASE	util.h	61;"	d
REQUEST	util.h	60;"	d
REQUEST_QUEUE_H	request_queue.h	2;"	d
REQ_CLOCK	util.h	/^    int REQ_CLOCK;$/;"	m	struct:__anon7
REQ_CLOCK	util.h	/^    int REQ_CLOCK;$/;"	m	struct:__anon8
REQ_CLOCK	util.h	/^    int REQ_CLOCK;$/;"	m	struct:__anon9
ROOT	main.h	19;"	d
Request	request_queue.h	/^} Request;$/;"	t	typeref:struct:__anon1
RequestQueue	request_queue.h	/^} RequestQueue;$/;"	t	typeref:struct:__anon2
SEC_IN_STATE	main.h	16;"	d
SOURCES	Makefile	/^SOURCES=$(wildcard *.c)$/;"	m
START_TIMESTAMP	util.h	/^    int* START_TIMESTAMP;$/;"	m	struct:__anon8
START_TIMESTAMP	util.h	/^    int* START_TIMESTAMP;$/;"	m	struct:__anon9
STATE_CHANGE_PROB	main.h	17;"	d
TRUE	main.h	14;"	d
UTILH	util.h	2;"	d
VENUE_INDEX	util.h	/^    int VENUE_INDEX;$/;"	m	struct:__anon7
VENUE_LIST	util.h	/^    short int *VENUE_LIST;$/;"	m	struct:__anon7
VENUE_REQ_QUEUE	util.h	/^    int* VENUE_REQ_QUEUE;$/;"	m	struct:__anon7
WATEK_GLOWNY_H	watek_glowny.h	2;"	d
WATEK_KOMUNIKACYJNY_H	watek_komunikacyjny.h	2;"	d
accessStateCritic	util.c	/^state_g accessStateCritic(state_g *currentState) {$/;"	f
accessStateDancer	util.c	/^state_g accessStateDancer(state_g *currentState) {$/;"	f
accessStateGuitarist	util.c	/^state_g accessStateGuitarist(state_g *currentState) {$/;"	f
ackCount	main.c	/^int ackCount = 0;$/;"	v
add	request_queue.c	/^void add(RequestQueue* queue, int source, int clock) {$/;"	f
attach_debugger	main.c	/^void attach_debugger() {$/;"	f
cArgs	util.h	/^} cArgs;$/;"	t	typeref:struct:__anon9
canProceed	main.c	/^int canProceed = 0;$/;"	v
canProceedCond	main.c	/^pthread_cond_t canProceedCond = PTHREAD_COND_INITIALIZER;$/;"	v
canProceedMutex	main.c	/^pthread_mutex_t canProceedMutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
capacity	request_queue.h	/^    int capacity;$/;"	m	struct:__anon2
changeStateCritic	util.c	/^void changeStateCritic(state_c *currentState, state_c newState)$/;"	f
changeStateDancer	util.c	/^void changeStateDancer(state_d *currentState, state_d newState)$/;"	f
changeStateGuitarist	util.c	/^void changeStateGuitarist(state_g *currentState, state_g newState)$/;"	f
checkCriticalSectionCondition	watek_komunikacyjny.c	/^void checkCriticalSectionCondition() {$/;"	f
checkProceedConditionG	watek_komunikacyjny.c	/^void checkProceedConditionG(gArgs* args) {$/;"	f
check_thread_support	main.c	/^void check_thread_support(int provided)$/;"	f
clock	request_queue.h	/^    int clock;$/;"	m	struct:__anon1
clockMutex	lamport.c	/^pthread_mutex_t clockMutex = PTHREAD_MUTEX_INITIALIZER;/;"	v
dArgs	util.h	/^} dArgs;$/;"	t	typeref:struct:__anon8
data	util.h	/^    int data;   \/* teść wiadomości np. ACK lub turnNo *\/$/;"	m	struct:__anon3
debug	main.h	56;"	d
debug	main.h	58;"	d
finalizuj	main.c	/^void finalizuj()$/;"	f
freeRequestQueue	request_queue.c	/^void freeRequestQueue(RequestQueue* queue) {$/;"	f
gArgs	util.h	/^} gArgs;$/;"	t	typeref:struct:__anon7
getFirstSource	request_queue.c	/^int getFirstSource(RequestQueue* queue) {$/;"	f
inicjuj_typ_pakietu	util.c	/^void inicjuj_typ_pakietu()$/;"	f
initRequestQueue	request_queue.c	/^void initRequestQueue(RequestQueue* queue, int capacity) {$/;"	f
initializeIArray	util.c	/^void initializeIArray(int* array, int length) {$/;"	f
initializeSIArray	util.c	/^void initializeSIArray(short int* array, int length) {$/;"	f
isBetter	watek_komunikacyjny.c	/^int isBetter(packet_t p1, packet_t p2) {$/;"	f
items	request_queue.h	/^    Request* items;$/;"	m	struct:__anon2
lamport	lamport.c	/^int lamport;$/;"	v
main	main.c	/^int main(int argc, char **argv)$/;"	f
mainLoopCritic	watek_glowny.c	/^void mainLoopCritic(cArgs* args) {$/;"	f
mainLoopDancer	watek_glowny.c	/^void mainLoopDancer(dArgs* args) {$/;"	f
mainLoopGuitarist	watek_glowny.c	/^void mainLoopGuitarist(gArgs* args)$/;"	f
max	watek_komunikacyjny.c	4;"	d	file:
msgClock	main.c	/^int* msgClock;$/;"	v
msgListGCMut	util.h	/^    pthread_mutex_t msgListGCMut;$/;"	m	struct:__anon7
msgListGDMut	util.h	/^    pthread_mutex_t msgListGDMut;$/;"	m	struct:__anon7
msgListVMut	util.h	/^    pthread_mutex_t msgListVMut;$/;"	m	struct:__anon7
nCritics	main.c	/^int rank, size, nGuitarists, nDancers, nCritics;$/;"	v
nDancers	main.c	/^int rank, size, nGuitarists, nDancers, nCritics;$/;"	v
nGuitarists	main.c	/^int rank, size, nGuitarists, nDancers, nCritics;$/;"	v
nRooms	main.c	/^int nRooms;$/;"	v
name	util.c	/^    const char *name;$/;"	m	struct:tagNames_t	file:
packet_t	util.h	/^} packet_t;$/;"	t	typeref:struct:__anon3
printIArray	util.c	/^void printIArray(int* array, int length, const char* name) {$/;"	f
printMSGArray	util.c	/^void printMSGArray(packet_t* array, int length, const char* name) {$/;"	f
printRequestQueue	request_queue.c	/^void printRequestQueue(RequestQueue* queue) {$/;"	f
printSIArray	util.c	/^void printSIArray(short int* array, int length, const char* name) {$/;"	f
print_startup_information	main.c	/^void print_startup_information() {$/;"	f
println	main.h	62;"	d
rank	main.c	/^int rank, size, nGuitarists, nDancers, nCritics;$/;"	v
removeItem	request_queue.c	/^void removeItem(RequestQueue* queue, int source) {$/;"	f
requestQueue	main.c	/^RequestQueue requestQueue;$/;"	v
sendPacket	util.c	/^void sendPacket(packet_t *pkt, int destination, int tag)$/;"	f
setMsgListToEmpty	util.c	/^void setMsgListToEmpty(packet_t* msgList, int length) {$/;"	f
size	main.c	/^int rank, size, nGuitarists, nDancers, nCritics;$/;"	v
size	request_queue.h	/^    int size;$/;"	m	struct:__anon2
source	request_queue.h	/^    int source;$/;"	m	struct:__anon1
src	util.h	/^    int src;  $/;"	m	struct:__anon3
stan	util.h	/^    state_c stan;$/;"	m	struct:__anon9
stan	util.h	/^    state_d stan;$/;"	m	struct:__anon8
stan	util.h	/^    state_g stan;$/;"	m	struct:__anon7
startKomWatekC	watek_komunikacyjny.c	/^void *startKomWatekC(void *ptr) {$/;"	f
startKomWatekD	watek_komunikacyjny.c	/^void *startKomWatekD(void *ptr) {$/;"	f
startKomWatekG	watek_komunikacyjny.c	/^void *startKomWatekG(void *ptr)$/;"	f
stateMut	util.c	/^pthread_mutex_t stateMut = PTHREAD_MUTEX_INITIALIZER;$/;"	v
state_c	util.h	/^typedef enum {C_REQUEST, C_AWAIT, C_PAIR, C_PASSIVE} state_c;$/;"	t	typeref:enum:__anon6
state_d	util.h	/^typedef enum {D_REQUEST, D_AWAIT, D_PAIR, D_PASSIVE} state_d;$/;"	t	typeref:enum:__anon5
state_g	util.h	/^              G_PERG} state_g;$/;"	t	typeref:enum:__anon4
tag	util.c	/^    int tag;$/;"	m	struct:tagNames_t	file:
tag2string	util.c	/^const char *const tag2string( int tag )$/;"	f
tagNames	util.c	/^} tagNames[] = { {"pustą wiadomość", EMPTY}, { "potwierdzenie", ACK}, {"prośbę", REQUEST}, {"zwolnienie", RELEASE} };$/;"	v	typeref:struct:tagNames_t
tagNames_t	util.c	/^struct tagNames_t{$/;"	s	file:
threadKom	main.c	/^pthread_t threadKom;$/;"	v
ts	util.h	/^    int ts;       \/* timestamp (zegar lamporta *\/$/;"	m	struct:__anon3
venueReqQueueMut	util.h	/^    pthread_mutex_t venueReqQueueMut;$/;"	m	struct:__anon7
